jobs:
  tests-and-coverage:
    name: "Testes e Cobertura"
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage.outputs.coverage }}

    steps:
      - name: "Checkout do código"
        uses: actions/checkout@v4

      # --- INÍCIO DA LÓGICA ADICIONADA ---

      - name: "Configurar Node.js ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' # Adiciona cache para acelerar instalações futuras

      - name: "Instalar dependências"
        run: npm ci # Usa 'ci' para uma instalação limpa e rápida, baseada no package-lock.json

      - name: "Executar testes com cobertura"
        run: npx nyc --reporter=lcov --reporter=text-summary npm test # Executa os testes e gera o relatório

      - name: "Validar cobertura mínima (${{ env.COVERAGE_MIN }}%)"
        run: |
          # Extrai a porcentagem de cobertura do sumário de texto
          COVERAGE=$(npx nyc report --reporter=text-summary | grep -oP 'Statements\s*:\s*\K[0-9\.]+(?=%)' | head -1)
          
          # Converte para número inteiro para comparação
          COVERAGE_INT=$(echo "$COVERAGE" | cut -d'.' -f1)
          
          echo "Cobertura atual: $COVERAGE%"
          echo "Cobertura mínima exigida: ${{ env.COVERAGE_MIN }}%"
          
          # Compara a cobertura atual com a mínima exigida
          if [ "$COVERAGE_INT" -lt "${{ env.COVERAGE_MIN }}" ]; then
            echo "Erro: A cobertura de testes ($COVERAGE%) está abaixo do mínimo exigido de ${{ env.COVERAGE_MIN }}%."
            exit 1 # Falha o workflow se a cobertura for baixa
          else
            echo "Sucesso: A cobertura de testes está dentro do esperado."
          fi

      # --- FIM DA LÓGICA ADICIONADA ---

      - name: "Extrair porcentagem de cobertura" # Esse step será validado pelo desafio, não altere o nome.
        id: coverage
        run: |
          COVERAGE=$(npx nyc report --reporter=text-summary | grep -oP 'Statements\s*:\s*\K[0-9\.]+(?=%)' | head -1)
          echo "Coverage: $COVERAGE%"
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT